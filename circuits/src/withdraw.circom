pragma circom 2.1.2;

include "../node_modules/circomlib/circuits/bitify.circom";
include "../node_modules/circomlib/circuits/pedersen.circom";
include "../node_modules/circomlib/circuits/comparators.circom";
include "merkleTree.circom";

template CommitmentHasher() {
    signal input nullifier;
    signal input secret;
    signal output commitment;
    signal output nullifierHash;

    component commitmentHasher = Pedersen(496);
    component nullifierHasher = Pedersen(248);
    component nullifierBits = Num2Bits(248);
    component secretBits = Num2Bits(248);
    nullifierBits.in <== nullifier;
    secretBits.in <== secret;
    for (var i = 0; i < 248; i++) {
        nullifierHasher.in[i] <== nullifierBits.out[i];
        commitmentHasher.in[i] <== nullifierBits.out[i];
        commitmentHasher.in[i + 248] <== secretBits.out[i];
    }

    commitment <== commitmentHasher.out[0];
    nullifierHash <== nullifierHasher.out[0];
}

// Verifies that commitment that corresponds to given secret and nullifier is included in the merkle tree of deposits
template Withdraw(levels) {
    signal input depositsRoot;
    signal input nullifierHash;
    signal input nullifier;
    signal input secret;
    signal input depositPathElements[levels];
    signal input depositPathIndices[levels];
    signal input exclusionPathElements[levels-1];
    signal input exclusionPathIndices[levels-1];
    signal input exclusionRoot;
    signal input lesserCommitment;
    signal input greaterCommitment;
   
    component hasher = CommitmentHasher();
    hasher.nullifier <== nullifier;
    hasher.secret <== secret;
    hasher.nullifierHash === nullifierHash;

    component depositTree = MerkleTreeChecker(levels);
    depositTree.leaf <== hasher.commitment;
    depositTree.root <== depositsRoot;
    for (var i = 0; i < levels; i++) {
        depositTree.pathElements[i] <== depositPathElements[i];
        depositTree.pathIndices[i] <== depositPathIndices[i];
    }

    //TODO num of bits?
    component gt1 = GreaterThan(252);
    gt1.in[0] <== greaterCommitment;
    gt1.in[1] <== hasher.commitment;
    gt1.out === 1;

    component gt2 = GreaterThan(252);
    gt2.in[0] <== hasher.commitment;
    gt2.in[1] <== lesserCommitment;
    gt2.out === 1;

    component exclusionMerkleTreeChecker = ExclusionMerkleTreeChecker(levels);
    exclusionMerkleTreeChecker.lesserLeaf <== lesserCommitment;
    exclusionMerkleTreeChecker.greaterLeaf <== greaterCommitment;
    exclusionMerkleTreeChecker.root <== exclusionRoot;
    for (var i = 0; i < levels-1; i++) {
        exclusionMerkleTreeChecker.pathElements[i] <== exclusionPathElements[i];
        exclusionMerkleTreeChecker.pathIndices[i] <== exclusionPathIndices[i];
    }
}

component main { public [ depositsRoot, exclusionRoot, nullifierHash ] } = Withdraw(20);

/* INPUT = {
  "commitment": "55",
  "depositsRoot": "19899084405412885315263622701145653395825957824070885201633799416376517262066",
  "nullifierHash": "",
  "nullifier": "",
  "secret": "",
  "depositPathElements": [
    54,
    "10506338482093326459308681014293319299673867223499094508713198213365972290826",
    "13101858720421586122213169105701726809237412572904322608795162164442742728536",
    "9435977551374467196838462072735174478230091448074675184221967344666994683412",
    "16962166755065019550326398280325524565949489749732472476300835350127613012566",
    "17870865183551434286885673732151386911940426528330787954844909887454116370301",
    "6318134858591656059479066099351910133222034378706795041202267899923652117534",
    "11345696205391376769769683860277269518617256738724086786512014734609753488820",
    "17235543131546745471991808272245772046758360534180976603221801364506032471936",
    "155962837046691114236524362966874066300454611955781275944230309195800494087",
    "14030416097908897320437553787826300082392928432242046897689557706485311282736",
    "12626316503845421241020584259526236205728737442715389902276517188414400172517",
    "6729873933803351171051407921027021443029157982378522227479748669930764447503",
    "12963910739953248305308691828220784129233893953613908022664851984069510335421",
    "8697310796973811813791996651816817650608143394255750603240183429036696711432",
    "9001816533475173848300051969191408053495003693097546138634479732228054209462",
    "13882856022500117449912597249521445907860641470008251408376408693167665584212",
    "6167697920744083294431071781953545901493956884412099107903554924846764168938",
    "16572499860108808790864031418434474032816278079272694833180094335573354127261",
    "11544818037702067293688063426012553693851444915243122674915303779243865603077"
  ],
  "depositPathIndices": [
    1,
    1,
    1,
    0,
    1,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
  ],
  "exclusionPathElements": [
    "13129533023168084798687492638871142891622755706449934877781280042264871470738",
    "17632584962318168811966476975637268835709837100150127487453288467453579761822",
    "13258530774103425415041310885715107580217331875686856626436332515033100657119",
    "159085422980359736787070031356483814258160860405872693665894433982431879155",
    "16640205414190175414380077665118269450294358858897019640557533278896634808665",
    "13024477302430254842915163302704885770955784224100349847438808884122720088412",
    "11345696205391376769769683860277269518617256738724086786512014734609753488820",
    "17235543131546745471991808272245772046758360534180976603221801364506032471936",
    "155962837046691114236524362966874066300454611955781275944230309195800494087",
    "14030416097908897320437553787826300082392928432242046897689557706485311282736",
    "12626316503845421241020584259526236205728737442715389902276517188414400172517",
    "6729873933803351171051407921027021443029157982378522227479748669930764447503",
    "12963910739953248305308691828220784129233893953613908022664851984069510335421",
    "8697310796973811813791996651816817650608143394255750603240183429036696711432",
    "9001816533475173848300051969191408053495003693097546138634479732228054209462",
    "13882856022500117449912597249521445907860641470008251408376408693167665584212",
    "6167697920744083294431071781953545901493956884412099107903554924846764168938",
    "16572499860108808790864031418434474032816278079272694833180094335573354127261",
    "11544818037702067293688063426012553693851444915243122674915303779243865603077"
  ],
  "exclusionPathIndices": [
    1,
    0,
    1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
  ],
  "exclusionRoot": "13750268193082544168725952135374462628739950233055047058892317155001865763684",
  "lesserCommitment": "50",
  "greaterCommitment": "60"
} */